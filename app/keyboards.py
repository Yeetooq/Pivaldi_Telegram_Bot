from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.types.web_app_info import WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder

from config import CHANNELS
from app.database.requests import get_categories, get_category_menu

bronirovanie = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Å—Ç–∞ –≤ Pivaldi',
                                           web_app=WebAppInfo(url='https://pivaldi.restoplace.ws/'))]],
    resize_keyboard=True
)

site = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text='–°–∞–π—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ Pivaldi',
                                           web_app=WebAppInfo(url='https://pivaldi.ru/'))]],
    resize_keyboard=True
)

kb_weather = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text="–ó–µ–ª–µ–Ω–æ–≥—Ä–∞–¥", callback_data='zelenograd'),
                      InlineKeyboardButton(text="–Æ—Ä–ª–æ–≤–æ", callback_data='yurlovo')],
                     [InlineKeyboardButton(text="–û–¥–∏–Ω—Ü–æ–≤–æ", callback_data='odincovo'),
                      InlineKeyboardButton(text="–ú—ã—Ç–∏—â–∏", callback_data='mitishi')]],
    resize_keyboard=True,

)

kb_crypto = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text="TON", callback_data='ton'),
                      InlineKeyboardButton(text="NOT", callback_data='not')],
                     [InlineKeyboardButton(text="BTC", callback_data='btc'),
                      InlineKeyboardButton(text="ETH", callback_data='eth')],
                     [InlineKeyboardButton(text="SOL", callback_data='sol'),
                      InlineKeyboardButton(text="ADA", callback_data='ada')],
                     [InlineKeyboardButton(text="stop info ‚ùå", callback_data='stop')]
                     ],
    resize_keyboard=True,
)

get_number = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä üì±',
                                                           request_contact=True)]],
                                 resize_keyboard=True)

get_location = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ üó∫Ô∏è',
                                                             request_location=True)]],
                                   resize_keyboard=True)

delete_reg = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ ‚ùå',
                                           callback_data='delete_reg')]],
    resize_keyboard=True
)


def showChannels():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[], row_width=1)
    for channel in CHANNELS:
        btn = InlineKeyboardButton(text=channel[0], url=channel[2])
        keyboard.inline_keyboard.append([btn])  # Append btn as a list
    btnDoneSub = InlineKeyboardButton(text="—è –ø–æ–¥–ø–∏—Å–∞–ª—Å—è ‚úÖ", callback_data="subchanneldone")
    keyboard.inline_keyboard.append([btnDoneSub])  # Append btnDoneSub as a list
    return keyboard


async def categories_menu():
    all_categories = await get_categories()
    keyboard = InlineKeyboardBuilder()
    for category in all_categories:
        keyboard.add(InlineKeyboardButton(text=category.name, callback_data=f"category_{category.id}"))
    keyboard.add(InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é ‚ùå', callback_data='close_menu'))
    return keyboard.adjust(2).as_markup()


async def nazad():
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©Ô∏è', callback_data='to_nazad'))
    return keyboard.adjust(1).as_markup()


async def nazad_bar():
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©Ô∏è', callback_data='to_main'))
    return keyboard.adjust(1).as_markup()


async def menu(category_id):
    all_menu = await get_category_menu(category_id)
    keyboard = InlineKeyboardBuilder()
    for menu in all_menu:
        keyboard.add(InlineKeyboardButton(text=menu.bludo, callback_data=f"menu_{menu.id}"))
    keyboard.add(InlineKeyboardButton(text='–ù–∞ –≥–ª–∞–≤–Ω—É—é ‚Ü©Ô∏è', callback_data='to_main'))
    return keyboard.adjust(1).as_markup()
